from sanic import Sanic, response
import json
import uuid
from functools import wraps

app = Sanic("DataReportingApp")

def load_json(filename):
    try:
        with open(filename, 'r') as file:
            return json.load(file)
    except FileNotFoundError:
        return {}

def save_json(filename, data):
    with open(filename, 'w') as file:
        json.dump(data, file)

def authenticate(func):
    @wraps(func)
    async def wrapper(request, *args, **kwargs):
        token = request.headers.get('Authorization')
        if not token:
            return response.json({'error': 'Authentication required'}, status=401)
        users_db = load_json('users.json')
        if token not in users_db:
            return response.json({'error': 'Invalid token'}, status=401)
        return await func(request, *args, **kwargs)
    return wrapper

@app.route('/login', methods=['POST'])
async def login(request):
    username = request.json.get('username')
    password = request.json.get('password')
    users_db = load_json('users.json')
    if username in users_db and users_db[username] == password:
        token = str(uuid.uuid4())
        users_db[token] = username
        save_json('users.json', users_db)
        return response.json({'token': token})
    return response.json({'error': 'Invalid credentials'}, status=401)

@app.route('/report/<report_id>')
@authenticate
async def get_report(request, report_id):
    reports_db = load_json('reports.json')
    report = reports_db.get(report_id)
    return response.json(report if report else {'error': 'Report not found'})

@app.route('/report', methods=['POST'])
@authenticate
async def add_report(request):
    report_data = request.json
    report_id = str(uuid.uuid4())
    reports_db = load_json('reports.json')
    reports_db[report_id] = report_data
    save_json('reports.json', reports_db)
    return response.json({'report_id': report_id})

@app.route('/reports')
@authenticate
async def list_reports(request):
    reports_db = load_json('reports.json')
    report_ids = list(reports_db.keys())
    return response.json({'report_ids': report_ids})

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000)