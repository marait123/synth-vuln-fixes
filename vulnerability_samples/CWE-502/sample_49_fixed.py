from bottle import route, request, response, run
import json
import uuid
import os

def load_db():
    if os.path.exists('user_sessions.json'):
        with open('user_sessions.json', 'r') as file:
            return json.load(file)
    return {}

def save_db(db):
    with open('user_sessions.json', 'w') as file:
        json.dump(db, file)

@route('/register', method='POST')
def register():
    username = request.forms.get('username')
    password = request.forms.get('password')
    email = request.forms.get('email')
    
    db = load_db()
    if username in db:
        return "Username already exists"
    db[username] = {'password': password, 'email': email}
    save_db(db)
    return "Registration successful"

@route('/login', method='POST')
def login():
    username = request.forms.get('username')
    password = request.forms.get('password')
    
    db = load_db()
    if username in db and db[username]['password'] == password:
        session_id = str(uuid.uuid4())
        db[session_id] = username
        save_db(db)
        response.set_cookie("session_id", session_id)
        return "Logged in successfully"
    else:
        return "Invalid credentials"

@route('/profile')
def profile():
    session_id = request.get_cookie("session_id")
    db = load_db()
    if session_id in db:
        username = db[session_id]
        user_data = db[username]
        return f"Username: {username}, Email: {user_data['email']}"
    else:
        return "Please log in to view your profile"

@route('/logout')
def logout():
    session_id = request.get_cookie("session_id")
    db = load_db()
    if session_id in db:
        del db[session_id]
        save_db(db)
    response.delete_cookie("session_id")
    return "Logged out successfully"

@route('/admin')
def admin():
    db = load_db()
    users = [f"Username: {username}, Email: {data['email']}" for username, data in db.items() if isinstance(data, dict)]
    return "<br>".join(users)

run(host='localhost', port=8080)