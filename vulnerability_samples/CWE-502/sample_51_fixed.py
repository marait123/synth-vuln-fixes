import cherrypy
import json
import os

class SettingsManager:
    def __init__(self):
        self.users = {
            'admin': 'password123',
            'user': 'userpass'
        }
        self.settings_file = 'app_settings.json'

    @cherrypy.expose
    def index(self):
        return """
        <html>
            <body>
                <h1>Settings Manager</h1>
                <form method="post" action="login">
                    Username: <input type="text" name="username" /><br />
                    Password: <input type="password" name="password" /><br />
                    <input type="submit" value="Login" />
                </form>
            </body>
        </html>
        """

    @cherrypy.expose
    def login(self, username, password):
        if username in self.users and self.users[username] == password:
            cherrypy.session['logged_in'] = True
            cherrypy.session['username'] = username
            raise cherrypy.HTTPRedirect("/dashboard")
        else:
            return "Invalid credentials"

    @cherrypy.expose
    def dashboard(self):
        if not cherrypy.session.get('logged_in'):
            raise cherrypy.HTTPRedirect("/")
        return """
        <html>
            <body>
                <h1>Dashboard</h1>
                <form method="post" action="save_settings">
                    Settings: <input type="text" name="settings" /><br />
                    <input type="submit" value="Save Settings" />
                </form>
                <a href="/display_settings">Display Settings</a>
            </body>
        </html>
        """

    @cherrypy.expose
    def save_settings(self, settings):
        if not cherrypy.session.get('logged_in'):
            raise cherrypy.HTTPRedirect("/")
        try:
            parsed_settings = json.loads(settings)
            with open(self.settings_file, 'w') as f:
                json.dump(parsed_settings, f)
            return "Settings saved"
        except json.JSONDecodeError:
            return "Invalid JSON format"

    @cherrypy.expose
    def display_settings(self):
        if not cherrypy.session.get('logged_in'):
            raise cherrypy.HTTPRedirect("/")
        try:
            with open(self.settings_file, 'r') as f:
                settings = json.load(f)
        except FileNotFoundError:
            settings = "No settings found"
        except json.JSONDecodeError:
            settings = "Invalid settings format"
        return f"Current settings: {settings}"

    @cherrypy.expose
    def update_setting(self, key, value):
        if not cherrypy.session.get('logged_in'):
            raise cherrypy.HTTPRedirect("/")
        try:
            with open(self.settings_file, 'r') as f:
                current_settings = json.load(f)
        except FileNotFoundError:
            current_settings = {}
        except json.JSONDecodeError:
            return "Invalid settings format"

        current_settings[key] = value
        with open(self.settings_file, 'w') as f:
            json.dump(current_settings, f)
        return f"Updated setting: {key} = {value}"

if __name__ == '__main__':
    conf = {
        '/': {
            'tools.sessions.on': True,
            'tools.staticdir.root': os.path.abspath(os.getcwd())
        }
    }
    cherrypy.quickstart(SettingsManager(), '/', conf)