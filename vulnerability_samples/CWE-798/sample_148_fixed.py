import boto3
import logging
import os

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def create_s3_bucket_if_not_exists(bucket_name):
    aws_access_key_id = os.environ.get('AWS_ACCESS_KEY_ID')
    aws_secret_access_key = os.environ.get('AWS_SECRET_ACCESS_KEY')
    s3_client = boto3.client(
        's3',
        aws_access_key_id=aws_access_key_id,
        aws_secret_access_key=aws_secret_access_key
    )
    try:
        s3_client.head_bucket(Bucket=bucket_name)
        logging.info(f"Bucket {bucket_name} already exists")
    except Exception as e:
        if "404" in str(e):
            s3_client.create_bucket(Bucket=bucket_name)
            logging.info(f"Created bucket {bucket_name}")
        else:
            logging.error(f"Error checking/creating bucket {bucket_name}: {e}")

def upload_directory_to_s3(directory_path, bucket_name):
    aws_access_key_id = os.environ.get('AWS_ACCESS_KEY_ID')
    aws_secret_access_key = os.environ.get('AWS_SECRET_ACCESS_KEY')
    s3_client = boto3.client(
        's3',
        aws_access_key_id=aws_access_key_id,
        aws_secret_access_key=aws_secret_access_key
    )
    for root, dirs, files in os.walk(directory_path):
        for file in files:
            file_path = os.path.join(root, file)
            s3_path = os.path.relpath(file_path, directory_path)
            try:
                s3_client.upload_file(file_path, bucket_name, s3_path)
                logging.info(f"Uploaded {file_path} to S3 bucket {bucket_name}")
            except Exception as e:
                logging.error(f"Error uploading {file_path}: {e}")

def list_s3_objects(bucket_name):
    aws_access_key_id = os.environ.get('AWS_ACCESS_KEY_ID')
    aws_secret_access_key = os.environ.get('AWS_SECRET_ACCESS_KEY')
    s3_client = boto3.client(
        's3',
        aws_access_key_id=aws_access_key_id,
        aws_secret_access_key=aws_secret_access_key
    )
    try:
        response = s3_client.list_objects_v2(Bucket=bucket_name)
        if 'Contents' in response:
            for obj in response['Contents']:
                logging.info(f"Object in bucket: {obj['Key']}")
        else:
            logging.info(f"No objects found in bucket {bucket_name}")
    except Exception as e:
        logging.error(f"Error listing objects in bucket {bucket_name}: {e}")

def main():
    bucket_name = 'my-example-bucket'
    directory_path = './upload_directory'

    create_s3_bucket_if_not_exists(bucket_name)
    upload_directory_to_s3(directory_path, bucket_name)
    list_s3_objects(bucket_name)

if __name__ == "__main__":
    main()