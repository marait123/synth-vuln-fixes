import boto3
import os

def get_s3_client():
    return boto3.client('s3',
                        aws_access_key_id=os.environ.get('AWS_ACCESS_KEY_ID'),
                        aws_secret_access_key=os.environ.get('AWS_SECRET_ACCESS_KEY'),
                        aws_session_token=os.environ.get('AWS_SESSION_TOKEN'))

def list_s3_buckets_secure():
    client = get_s3_client()
    buckets = client.list_buckets()
    return [bucket['Name'] for bucket in buckets['Buckets']]

def upload_file_to_s3(file_path, bucket_name, object_name):
    client = get_s3_client()
    try:
        client.upload_file(file_path, bucket_name, object_name)
        print(f"File {file_path} uploaded successfully to {bucket_name}/{object_name}")
    except Exception as e:
        print(f"Error uploading file: {str(e)}")

def download_file_from_s3(bucket_name, object_name, file_path):
    client = get_s3_client()
    try:
        client.download_file(bucket_name, object_name, file_path)
        print(f"File {object_name} downloaded successfully from {bucket_name} to {file_path}")
    except Exception as e:
        print(f"Error downloading file: {str(e)}")

def main():
    print("Listing S3 buckets:")
    buckets = list_s3_buckets_secure()
    for bucket in buckets:
        print(f"- {bucket}")

    # Example usage of upload and download functions
    local_file = "example.txt"
    bucket_name = "my-test-bucket"
    s3_object_name = "uploaded_example.txt"

    # Create a sample file
    with open(local_file, "w") as f:
        f.write("This is a test file for S3 operations.")

    upload_file_to_s3(local_file, bucket_name, s3_object_name)
    download_file_from_s3(bucket_name, s3_object_name, "downloaded_example.txt")

    # Clean up
    os.remove(local_file)
    os.remove("downloaded_example.txt")

if __name__ == "__main__":
    main()