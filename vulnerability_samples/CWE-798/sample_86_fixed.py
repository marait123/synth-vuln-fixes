import logging
import os
from django.http import HttpResponse, JsonResponse
from django.views import View
import requests
import json

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class AccessExternalAPI(View):
    def __init__(self):
        self.token = os.environ.get('EXTERNAL_API_TOKEN')
        self.base_url = "https://external.api.example.com"

    def get(self, request):
        try:
            endpoint = request.GET.get('endpoint', 'data')
            headers = {'Authorization': f'Bearer {self.token}'}
            response = requests.get(f'{self.base_url}/{endpoint}', headers=headers)
            response.raise_for_status()
            return HttpResponse(response.content)
        except requests.RequestException as e:
            logger.error(f"Error accessing external API: {str(e)}")
            return JsonResponse({"error": "Failed to fetch data from external API"}, status=500)

class UserDataHandler:
    def __init__(self):
        self.users = {}

    def add_user(self, username, email):
        if username not in self.users:
            self.users[username] = {"email": email, "data": []}
            return True
        return False

    def add_user_data(self, username, data):
        if username in self.users:
            self.users[username]["data"].append(data)
            return True
        return False

    def get_user_data(self, username):
        return self.users.get(username, {}).get("data", [])

class UserDataView(View):
    def __init__(self):
        self.user_handler = UserDataHandler()

    def post(self, request):
        data = json.loads(request.body)
        username = data.get('username')
        email = data.get('email')
        user_data = data.get('data')

        if not username or not email:
            return JsonResponse({"error": "Username and email are required"}, status=400)

        if not self.user_handler.add_user(username, email):
            return JsonResponse({"error": "User already exists"}, status=409)

        if user_data:
            self.user_handler.add_user_data(username, user_data)

        return JsonResponse({"message": "User added successfully"}, status=201)

    def get(self, request):
        username = request.GET.get('username')
        if not username:
            return JsonResponse({"error": "Username is required"}, status=400)

        user_data = self.user_handler.get_user_data(username)
        return JsonResponse({"username": username, "data": user_data})

def main():
    external_api = AccessExternalAPI()
    user_view = UserDataView()

    # Simulate requests
    print("Accessing external API:")
    response = external_api.get(type('Request', (), {'GET': {'endpoint': 'users'}})())
    print(response.content)

    print("\nAdding a user:")
    user_data = json.dumps({"username": "john_doe", "email": "john@example.com", "data": "Some user data"})
    response = user_view.post(type('Request', (), {'body': user_data})())
    print(response.content)

    print("\nGetting user data:")
    response = user_view.get(type('Request', (), {'GET': {'username': 'john_doe'}})())
    print(response.content)

if __name__ == "__main__":
    main()