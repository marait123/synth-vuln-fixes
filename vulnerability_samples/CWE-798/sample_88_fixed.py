from sqlalchemy import create_engine, MetaData, Table, select, update, insert
from werkzeug.security import generate_password_hash, check_password_hash
import os

def create_db_connection():
    username = os.environ.get('DB_USERNAME')
    password = os.environ.get('DB_PASSWORD')
    host = os.environ.get('DB_HOST', 'localhost')
    db_name = os.environ.get('DB_NAME', 'mydb')
    return create_engine(f'mysql+pymysql://{username}:{password}@{host}/{db_name}')

def query_user_data(username):
    engine = create_db_connection()
    metadata = MetaData(bind=engine)
    users = Table('users', metadata, autoload=True)
    query = select([users]).where(users.c.username == username)
    connection = engine.connect()
    result = connection.execute(query)
    return [dict(row) for row in result]

def authenticate_user(username, password):
    user_data = query_user_data(username)
    if user_data and check_password_hash(user_data[0]['password'], password):
        return True
    return False

def register_user(username, password, email):
    engine = create_db_connection()
    metadata = MetaData(bind=engine)
    users = Table('users', metadata, autoload=True)
    hashed_password = generate_password_hash(password)
    ins = insert(users).values(username=username, password=hashed_password, email=email)
    connection = engine.connect()
    connection.execute(ins)

def update_user_profile(username, new_email):
    engine = create_db_connection()
    metadata = MetaData(bind=engine)
    users = Table('users', metadata, autoload=True)
    upd = update(users).where(users.c.username == username).values(email=new_email)
    connection = engine.connect()
    connection.execute(upd)

def main():
    # Example usage
    register_user("john_doe", "securepass123", "john@example.com")
    if authenticate_user("john_doe", "securepass123"):
        print("User authenticated successfully")
        user_data = query_user_data("john_doe")
        print(f"User profile: {user_data}")
        update_user_profile("john_doe", "newemail@example.com")
        updated_data = query_user_data("john_doe")
        print(f"Updated user profile: {updated_data}")
    else:
        print("Authentication failed")

if __name__ == "__main__":
    main()