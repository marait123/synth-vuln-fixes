import subprocess
import os
from flask import Flask, request, render_template_string

app = Flask(__name__)

HTML_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>File Manager</title>
</head>
<body>
    <h1>File Manager</h1>
    <h2>List Directory</h2>
    <form action="/list" method="get">
        <input type="text" name="directory" placeholder="Enter directory path">
        <input type="submit" value="List">
    </form>
    <h2>Create Directory</h2>
    <form action="/create" method="post">
        <input type="text" name="directory" placeholder="Enter directory path">
        <input type="submit" value="Create">
    </form>
    <h2>Delete Directory</h2>
    <form action="/delete" method="post">
        <input type="text" name="directory" placeholder="Enter directory path">
        <input type="submit" value="Delete">
    </form>
    <hr>
    <h3>Result:</h3>
    <pre>{{ result }}</pre>
</body>
</html>
"""

@app.route('/')
def index():
    return render_template_string(HTML_TEMPLATE, result="")

@app.route('/list')
def list_directory():
    directory = request.args.get("directory", ".")
    try:
        result = subprocess.run(["ls", "-lah", directory], capture_output=True, text=True, check=True)
        return render_template_string(HTML_TEMPLATE, result=result.stdout)
    except subprocess.CalledProcessError as e:
        return render_template_string(HTML_TEMPLATE, result=f"Error: {e.stderr}")

@app.route('/create', methods=['POST'])
def create_directory():
    directory = request.form.get("directory")
    try:
        os.makedirs(directory)
        result = f"Directory '{directory}' created successfully."
    except Exception as e:
        result = f"Error creating directory: {str(e)}"
    return render_template_string(HTML_TEMPLATE, result=result)

@app.route('/delete', methods=['POST'])
def delete_directory():
    directory = request.form.get("directory")
    try:
        os.rmdir(directory)
        result = f"Directory '{directory}' deleted successfully."
    except Exception as e:
        result = f"Error deleting directory: {str(e)}"
    return render_template_string(HTML_TEMPLATE, result=result)

if __name__ == '__main__':
    app.run(debug=True)