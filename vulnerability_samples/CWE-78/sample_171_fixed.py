import subprocess
import shlex
import json
from datetime import datetime
import os

def log_action(action, file_name, content=''):
    log_entry = f"{datetime.now()} - Action: {action}, File: {file_name}, Content: {content}\n"
    with open('file_actions.log', 'a') as log_file:
        log_file.write(log_entry)

def list_files(directory):
    try:
        files = os.listdir(directory)
        return json.dumps(files)
    except Exception as e:
        return str(e)

def advanced_file_management(event, context):
    file_action = event.get('action')
    file_name = event.get('file_name')
    content = event.get('content', '')
    directory = event.get('directory', '.')

    if file_action not in ['write', 'append', 'delete', 'list']:
        return "Invalid file action"

    if file_action == 'list':
        return list_files(shlex.quote(directory))

    if not file_name:
        return "File name is required"

    safe_file_name = shlex.quote(file_name)
    safe_content = shlex.quote(content)

    if file_action == 'write':
        command = ["sh", "-c", f"echo {safe_content} > {safe_file_name}"]
    elif file_action == 'append':
        command = ["sh", "-c", f"echo {safe_content} >> {safe_file_name}"]
    elif file_action == 'delete':
        command = ["rm", "-f", safe_file_name]

    subprocess.run(command, check=True)
    log_action(file_action, file_name, content)
    return "File action completed"

def main():
    # Simulate different scenarios
    events = [
        {'action': 'write', 'file_name': 'test.txt', 'content': 'Hello, World!'},
        {'action': 'append', 'file_name': 'test.txt', 'content': 'New line'},
        {'action': 'list', 'directory': '.'},
        {'action': 'delete', 'file_name': 'test.txt'},
    ]

    for event in events:
        result = advanced_file_management(event, None)
        print(f"Action: {event['action']}, Result: {result}")

if __name__ == "__main__":
    main()