import tornado.ioloop
import tornado.web
import logging
import sqlite3
import uuid
import hashlib

# Logger setup
logger = logging.getLogger('user_logger')
logger.setLevel(logging.INFO)
fh = logging.FileHandler('user_activity.log')
logger.addHandler(fh)

# Database setup
conn = sqlite3.connect('users.db')
cursor = conn.cursor()
cursor.execute('''CREATE TABLE IF NOT EXISTS users
                  (id INTEGER PRIMARY KEY, username TEXT, password TEXT, token TEXT)''')
conn.commit()

class BaseHandler(tornado.web.RequestHandler):
    def get_current_user(self):
        return self.get_secure_cookie("user")

class MainHandler(BaseHandler):
    @tornado.web.authenticated
    def get(self):
        user = self.get_current_user().decode('utf-8')
        self.write(f'Hello, {user}!')

class LoginHandler(BaseHandler):
    def get(self):
        self.write('<html><body><form action="/login" method="post">'
                   'Username: <input type="text" name="username">'
                   'Password: <input type="password" name="password">'
                   '<input type="submit" value="Sign in">'
                   '</form></body></html>')

    def post(self):
        username = self.get_argument("username")
        password = self.get_argument("password")
        hashed_password = hashlib.sha256(password.encode()).hexdigest()
        
        cursor.execute("SELECT * FROM users WHERE username=? AND password=?", (username, hashed_password))
        user = cursor.fetchone()
        
        if user:
            token = str(uuid.uuid4())
            cursor.execute("UPDATE users SET token=? WHERE username=?", (token, username))
            conn.commit()
            self.set_secure_cookie("user", username)
            logger.warning(f'User logged in: {username}')  # Fixed line
            self.redirect("/")
        else:
            logger.warning(f'Failed login attempt')
            self.write("Invalid login")

class RegisterHandler(BaseHandler):
    def get(self):
        self.write('<html><body><form action="/register" method="post">'
                   'Username: <input type="text" name="username">'
                   'Password: <input type="password" name="password">'
                   '<input type="submit" value="Register">'
                   '</form></body></html>')

    def post(self):
        username = self.get_argument("username")
        password = self.get_argument("password")
        hashed_password = hashlib.sha256(password.encode()).hexdigest()
        
        cursor.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, hashed_password))
        conn.commit()
        logger.info('New user registered')
        self.redirect("/login")

class LogoutHandler(BaseHandler):
    def get(self):
        self.clear_cookie("user")
        self.redirect("/login")

def make_app():
    return tornado.web.Application([
        (r"/", MainHandler),
        (r"/login", LoginHandler),
        (r"/register", RegisterHandler),
        (r"/logout", LogoutHandler)
    ], cookie_secret="SECRET_COOKIE_KEY")

if __name__ == "__main__":
    app = make_app()
    app.listen(8888)
    tornado.ioloop.IOLoop.current().start()