from django.http import HttpRequest, JsonResponse
from django.core.exceptions import ValidationError
import logging
import math

logger = logging.getLogger(__name__)

def validate_temperature_range(temperature, unit):
    if unit == 'C':
        if temperature < -273.15 or temperature > 1000:
            raise ValidationError("Temperature out of range for Celsius")
    elif unit == 'F':
        if temperature < -459.67 or temperature > 1832:
            raise ValidationError("Temperature out of range for Fahrenheit")
    elif unit == 'K':
        if temperature < 0 or temperature > 1273.15:
            raise ValidationError("Temperature out of range for Kelvin")
    elif unit == 'R':
        if temperature < 0 or temperature > 2291.67:
            raise ValidationError("Temperature out of range for Rankine")

def convert_temperature(request: HttpRequest):
    temperature_input = request.GET.get('temperature')
    unit = request.GET.get('unit')
    
    try:
        if temperature_input.lower() == "nan" or math.isnan(float(temperature_input)):
            raise ValueError("NaN is not a valid temperature input")
        temperature = float(temperature_input)
        validate_temperature_range(temperature, unit)
    except ValueError as e:
        logger.error(f"Invalid temperature input: {temperature_input}")
        return JsonResponse({"error": str(e)}, status=400)
    except ValidationError as e:
        logger.error(f"Temperature validation error: {str(e)}")
        return JsonResponse({"error": str(e)}, status=400)

    result = {}
    if unit == 'C':
        fahrenheit = (temperature * 9/5) + 32
        kelvin = temperature + 273.15
        rankine = (temperature + 273.15) * 9/5
        result = {
            'input_temperature': temperature,
            'unit_input': '°C',
            'fahrenheit': fahrenheit,
            'kelvin': kelvin,
            'rankine': rankine
        }
    elif unit == 'F':
        celsius = (temperature - 32) * 5/9
        kelvin = (temperature - 32) * 5/9 + 273.15
        rankine = temperature + 459.67
        result = {
            'input_temperature': temperature,
            'unit_input': '°F',
            'celsius': celsius,
            'kelvin': kelvin,
            'rankine': rankine
        }
    elif unit == 'K':
        celsius = temperature - 273.15
        fahrenheit = (temperature - 273.15) * 9/5 + 32
        rankine = temperature * 1.8
        result = {
            'input_temperature': temperature,
            'unit_input': 'K',
            'celsius': celsius,
            'fahrenheit': fahrenheit,
            'rankine': rankine
        }
    elif unit == 'R':
        celsius = (temperature - 491.67) * 5/9
        fahrenheit = temperature - 459.67
        kelvin = temperature * 5/9
        result = {
            'input_temperature': temperature,
            'unit_input': 'R',
            'celsius': celsius,
            'fahrenheit': fahrenheit,
            'kelvin': kelvin
        }
    else:
        logger.error(f"Invalid unit provided: {unit}")
        return JsonResponse({"error": "Invalid unit provided"}, status=400)

    logger.info(f"Temperature conversion: {temperature} {unit} converted to multiple units")
    return JsonResponse(result)