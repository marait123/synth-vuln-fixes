import logging
from pyramid.view import view_config
from pyramid.response import Response
from sqlalchemy.exc import SQLAlchemyError
from .models import MyModel, User
from pyramid.csrf import check_csrf_token

logger = logging.getLogger(__name__)

@view_config(
    route_name='home',
    check_origin=True,
    renderer='my_app:templates/home.jinja2'
)
def home(request):
    try:
        query = request.dbsession.query(MyModel)
        items = query.all()
    except SQLAlchemyError:
        logger.exception("Database error occurred")
        return Response("Database error", content_type='text/plain', status=500)
    return {'items': items, 'project': 'my_proj'}

@view_config(
    route_name='user_profile',
    check_origin=True,
    renderer='my_app:templates/user_profile.jinja2'
)
def user_profile(request):
    user_id = request.matchdict['user_id']
    try:
        user = request.dbsession.query(User).filter(User.id == user_id).one()
    except SQLAlchemyError:
        logger.exception(f"Error fetching user with id {user_id}")
        return Response("User not found", content_type='text/plain', status=404)
    return {'user': user}

@view_config(
    route_name='update_profile',
    check_origin=True,
    request_method='POST'
)
def update_profile(request):
    check_csrf_token(request)
    user_id = request.matchdict['user_id']
    new_email = request.POST.get('email')
    try:
        user = request.dbsession.query(User).filter(User.id == user_id).one()
        user.email = new_email
        request.dbsession.flush()
    except SQLAlchemyError:
        logger.exception(f"Error updating user with id {user_id}")
        return Response("Error updating profile", content_type='text/plain', status=500)
    return Response("Profile updated successfully", content_type='text/plain', status=200)

@view_config(
    route_name='create_item',
    check_origin=True,
    renderer='my_app:templates/create_item.jinja2'
)
def create_item(request):
    if request.method == 'POST':
        check_csrf_token(request)
        name = request.POST.get('name')
        description = request.POST.get('description')
        try:
            new_item = MyModel(name=name, description=description)
            request.dbsession.add(new_item)
            request.dbsession.flush()
        except SQLAlchemyError:
            logger.exception("Error creating new item")
            return Response("Error creating item", content_type='text/plain', status=500)
        return Response("Item created successfully", content_type='text/plain', status=200)
    return {}

def includeme(config):
    config.add_route('home', '/')
    config.add_route('user_profile', '/user/{user_id}')
    config.add_route('update_profile', '/user/{user_id}/update')
    config.add_route('create_item', '/item/create')