import os
import shutil
import tempfile
import logging
from datetime import datetime

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def backup_config_files(config_dir):
    try:
        backup_dir = tempfile.mkdtemp()
        logging.info(f"Created temporary backup directory: {backup_dir}")
        
        for file in os.listdir(config_dir):
            src_path = os.path.join(config_dir, file)
            dest_path = os.path.join(backup_dir, file)
            shutil.copy2(src_path, dest_path)
            os.chmod(dest_path, 0o644)  # Fixed line
            logging.info(f"Backed up: {file}")
        
        return backup_dir
    except Exception as e:
        logging.error(f"Error during backup: {str(e)}")
        return None

def create_backup_report(backup_dir):
    report_file = os.path.join(backup_dir, "backup_report.txt")
    try:
        with open(report_file, 'w') as report:
            report.write(f"Backup Report - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
            for file in os.listdir(backup_dir):
                if file != "backup_report.txt":
                    file_path = os.path.join(backup_dir, file)
                    file_size = os.path.getsize(file_path)
                    report.write(f"File: {file}, Size: {file_size} bytes\n")
        logging.info(f"Backup report created: {report_file}")
    except Exception as e:
        logging.error(f"Error creating backup report: {str(e)}")

def main():
    config_dir = input("Enter the path to the config directory: ")
    if not os.path.isdir(config_dir):
        logging.error(f"Invalid directory: {config_dir}")
        return

    backup_dir = backup_config_files(config_dir)
    if backup_dir:
        create_backup_report(backup_dir)
        logging.info(f"Backup completed successfully. Backup directory: {backup_dir}")
    else:
        logging.error("Backup process failed.")

if __name__ == "__main__":
    main()