from django.shortcuts import redirect, render
from django.http import HttpRequest, HttpResponse
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.decorators import login_required
from django.utils.http import is_safe_url
import logging

logger = logging.getLogger(__name__)

def user_login(request):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)
            return redirect('main')
        else:
            return render(request, 'login.html', {'error': 'Invalid credentials'})
    return render(request, 'login.html')

@login_required
def user_profile(request):
    return render(request, 'profile.html', {'user': request.user})

@login_required
def user_logout(request):
    logout(request)
    return redirect('login')

@login_required
def main_view(request):
    user_role = request.user.groups.first().name if request.user.groups.exists() else 'guest'
    context = {'user_role': user_role}
    return render(request, 'main.html', context)

@login_required
def http_redirect(request: HttpRequest):
    next_page = request.GET.get('next', '/default')
    user_role = request.user.groups.first().name if request.user.groups.exists() else 'guest'
    if not (next_page):
        logger.warning(f"Invalid redirection attempt to {next_page} by user {request.user.username}")
        return render(request, 'error_page.html', {'message': 'Invalid redirection URL'})
    if user_role == 'admin':
        redirect_url = f"/admin?next={next_page}"
    else:
        redirect_url = f"/process?next={next_page}"
    if is_safe_url(redirect_url, allowed_hosts=request.get_host()):
        logger.info(f"Redirecting user {request.user.username} to {redirect_url}")
        return redirect(redirect_url)
    else:
        logger.warning(f"Attempted unsafe redirection to {redirect_url} by user {request.user.username}")
        return render(request, 'error_page.html', {'message': 'Unsafe redirection attempt detected'})

def simulate_roles(request):
    role = request.GET.get('role', 'guest')
    next_page = request.GET.get('next', '/default')
    if is_safe_url(next_page, allowed_hosts=request.get_host()):
        if role == 'admin':
            return HttpResponse(f"Admin view. Next page: {next_page}")
        elif role == 'user':
            return HttpResponse(f"User view. Next page: {next_page}")
        else:
            return HttpResponse(f"Guest view. Next page: {next_page}")
    else:
        return HttpResponse("Unsafe URL detected")