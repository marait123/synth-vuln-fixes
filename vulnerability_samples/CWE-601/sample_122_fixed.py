from django.shortcuts import render, redirect
from django.http import HttpRequest, JsonResponse
from django.core.mail import send_mail
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.decorators import login_required
from django.contrib.auth.models import User
from django.utils.http import url_has_allowed_host_and_scheme

def login_view(request: HttpRequest):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)
            return redirect('dashboard')
        else:
            return render(request, 'login.html', {'error': 'Invalid credentials'})
    return render(request, 'login.html')

def logout_view(request: HttpRequest):
    logout(request)
    return redirect('login')

@login_required
def dashboard(request: HttpRequest):
    return render(request, 'dashboard.html')

@login_required
def profile_update(request: HttpRequest):
    if request.method == 'POST':
        user = request.user
        user.first_name = request.POST.get('first_name', user.first_name)
        user.last_name = request.POST.get('last_name', user.last_name)
        user.email = request.POST.get('email', user.email)
        user.save()
        return redirect('dashboard')
    return render(request, 'profile_update.html')

def feedback_redirect(request: HttpRequest):
    next_page = request.GET.get('next', '/default')
    user_email = request.GET.get('email')
    feedback = request.GET.get('feedback')
    rating = request.GET.get('rating')
    category = request.GET.get('category')

    if user_email and feedback:
        feedback_content = f"Rating: {rating}\nCategory: {category}\nFeedback: {feedback}"
        send_mail(
            'User Feedback',
            feedback_content,
            'noreply@example.com',
            [user_email],
            fail_silently=False,
        )

    if 'error' in request.GET:
        return JsonResponse({'status': 'error', 'message': 'An error occurred'}, status=500)

    if not url_has_allowed_host_and_scheme(url=next_page, allowed_hosts={request.get_host()}):
        next_page = '/default'
    return redirect(next_page)

def feedback_form(request: HttpRequest):
    return render(request, 'feedback_form.html')

@login_required
def user_list(request: HttpRequest):
    users = User.objects.all()
    return render(request, 'user_list.html', {'users': users})