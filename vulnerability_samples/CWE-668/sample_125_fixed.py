import os
from pyramid.config import Configurator
from pyramid.response import Response
from pyramid.view import view_config
from pyramid.security import remember, forget, authenticated_userid
from pyramid.httpexceptions import HTTPFound
import sqlite3

DATABASE = 'app.db'

def get_db():
    db = sqlite3.connect(DATABASE)
    db.row_factory = sqlite3.Row
    return db

def init_db():
    with get_db() as db:
        db.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, username TEXT UNIQUE, password TEXT)')
        db.execute('CREATE TABLE IF NOT EXISTS preferences (user_id INTEGER, theme TEXT, FOREIGN KEY(user_id) REFERENCES users(id))')

@view_config(route_name='home', renderer='string')
def home_view(request):
    username = authenticated_userid(request)
    if username:
        return f"Welcome, {username}!"
    return "Welcome! Please log in."

@view_config(route_name='login', renderer='string')
def login_view(request):
    if request.method == 'POST':
        username = request.params.get('username')
        password = request.params.get('password')
        with get_db() as db:
            user = db.execute('SELECT * FROM users WHERE username = ? AND password = ?', (username, password)).fetchone()
        if user:
            headers = remember(request, username)
            return HTTPFound(location=request.route_url('home'), headers=headers)
    return "Login Form"

@view_config(route_name='logout')
def logout_view(request):
    headers = forget(request)
    return HTTPFound(location=request.route_url('home'), headers=headers)

@view_config(route_name='set_preference')
def set_preference_view(request):
    username = authenticated_userid(request)
    if not username:
        return HTTPFound(location=request.route_url('login'))
    
    preference = request.params.get('theme', 'light')
    with get_db() as db:
        user_id = db.execute('SELECT id FROM users WHERE username = ?', (username,)).fetchone()[0]
        db.execute('INSERT OR REPLACE INTO preferences (user_id, theme) VALUES (?, ?)', (user_id, preference))
    
    response = Response(f"Preference set to {preference}")
    response.set_cookie('preference', preference, samesite='Lax', secure=False)
    return response

def create_app():
    with Configurator() as config:
        config.include('pyramid_debugtoolbar')
        config.add_route('home', '/')
        config.add_route('login', '/login')
        config.add_route('logout', '/logout')
        config.add_route('set_preference', '/set_preference')
        config.scan()
        app = config.make_wsgi_app()
    return app

if __name__ == '__main__':
    init_db()
    app = create_app()
    app.run(host='127.0.0.1', port=8080, debug=True, use_reloader=True)