import defusedcsv
import flask
from flask import request, jsonify, session
import sqlite3
from werkzeug.security import generate_password_hash, check_password_hash

app = flask.Flask(__name__)
app.secret_key = 'your_secret_key'

def get_db_connection():
    conn = sqlite3.connect('database.db')
    conn.row_factory = sqlite3.Row
    return conn

@app.route('/register', methods=['POST'])
def register():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')
    
    if not username or not password:
        return jsonify({"error": "Username and password are required"}), 400

    conn = get_db_connection()
    cur = conn.cursor()
    cur.execute("INSERT INTO users (username, password) VALUES (?, ?)",
                (username, generate_password_hash(password)))
    conn.commit()
    conn.close()
    
    return jsonify({"message": "User registered successfully"}), 201

@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')
    
    conn = get_db_connection()
    user = conn.execute("SELECT * FROM users WHERE username = ?", (username,)).fetchone()
    conn.close()
    
    if user and check_password_hash(user['password'], password):
        session['user_id'] = user['id']
        return jsonify({"message": "Logged in successfully"}), 200
    else:
        return jsonify({"error": "Invalid username or password"}), 401

@app.route('/export_csv', methods=['POST'])
def export_csv():
    if 'user_id' not in session:
        return jsonify({"error": "Unauthorized"}), 401

    data = request.get_json()
    if not data:
        return jsonify({"error": "No data provided"}), 400

    with open('output.csv', 'w', newline='') as file:
        writer = defusedcsv.writer(file)
        headers = data[0].keys()
        all_rows = [headers] + [item.values() for item in data]
        writer.writerows(all_rows)

    return jsonify({"message": "CSV exported successfully"})

@app.route('/export_user_data', methods=['GET'])
def export_user_data():
    if 'user_id' not in session:
        return jsonify({"error": "Unauthorized"}), 401

    conn = get_db_connection()
    user_data = conn.execute("SELECT * FROM users WHERE id = ?", (session['user_id'],)).fetchone()
    conn.close()

    if not user_data:
        return jsonify({"error": "User not found"}), 404

    with open('user_data.csv', 'w', newline='') as file:
        writer = defusedcsv.writer(file)
        headers = user_data.keys()
        writer.writerow(headers)
        writer.writerow(user_data)

    return jsonify({"message": "User data exported successfully"})

if __name__ == '__main__':
    app.run(debug=True)