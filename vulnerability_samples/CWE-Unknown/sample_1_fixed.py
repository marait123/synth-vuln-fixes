# Django settings.py
import os

SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'your-secret-key-here')
DEBUG = os.getenv('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Django models.py
from django.db import models
from django.contrib.auth.models import User

class ChatMessage(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    message = models.TextField()
    timestamp = models.DateTimeField(auto_now_add=True)

# Django views.py
from django.http import HttpResponse, JsonResponse
from django.contrib.auth.decorators import login_required
from django.views.decorators.csrf import csrf_exempt
from django.contrib.auth import authenticate, login, logout
from .models import ChatMessage
import socket
import json
import os

def start_socket():
    host = os.getenv('HOST_ADDRESS', '127.0.0.1')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((host, 1337))
    s.listen(1)
    print(f"socket started on {host}:1337")
    return s

socket_server = start_socket()

@login_required
def index(request):
    return HttpResponse("Welcome to the Chat App!")

@csrf_exempt
def user_login(request):
    if request.method == 'POST':
        data = json.loads(request.body)
        username = data.get('username')
        password = data.get('password')
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)
            return JsonResponse({"status": "success"})
    return JsonResponse({"status": "error"})

@login_required
def user_logout(request):
    logout(request)
    return JsonResponse({"status": "success"})

@login_required
@csrf_exempt
def send_message(request):
    if request.method == 'POST':
        data = json.loads(request.body)
        message = data.get('message')
        ChatMessage.objects.create(user=request.user, message=message)
        return JsonResponse({"status": "success"})
    return JsonResponse({"status": "error"})

@login_required
def get_messages(request):
    messages = ChatMessage.objects.all().order_by('-timestamp')[:50]
    data = [{"user": msg.user.username, "message": msg.message, "timestamp": msg.timestamp} for msg in messages]
    return JsonResponse(data, safe=False)

# Django urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index),
    path('login/', views.user_login),
    path('logout/', views.user_logout),
    path('send_message/', views.send_message),
    path('get_messages/', views.get_messages),
]