import logging
from django.core.mail import EmailMessage
from django.template.loader import render_to_string
from django.http import HttpRequest
from django.contrib.auth.models import User
from django.db import models
from django.utils.html import escape

class EmailTemplate(models.Model):
    name = models.CharField(max_length=100)
    content = models.TextField()

def get_email_template(template_name):
    try:
        return EmailTemplate.objects.get(name=template_name).content
    except EmailTemplate.DoesNotExist:
        return None

def validate_input(data):
    if not all(key in data for key in ['subject', 'template', 'user_id', 'message']):
        return False
    return True

def log_email_attempt(user_id, status, message):
    logging.info(f"Email attempt - User ID: {user_id}, Status: {status}, Message: {message}")

def send_notification_email(request: HttpRequest):
    if not validate_input(request.POST):
        return {'status': 'error', 'message': 'Invalid input data'}

    subject = escape(request.POST.get('subject'))
    template_name = escape(request.POST.get('template'))
    user_id = request.POST.get('user_id')
    message = escape(request.POST.get('message'))

    try:
        user = User.objects.get(pk=user_id)
        template_content = get_email_template(template_name)
        
        if template_content is None:
            log_email_attempt(user_id, 'error', 'Template not found')
            return {'status': 'error', 'message': 'Email template not found'}

        try:
            email_body = render_to_string(template_name, {
                'username': escape(user.username),
                'content': message,
                'custom_template': escape(template_content)
            })
        except Exception as e:
            log_email_attempt(user_id, 'error', f'Template rendering failed: {str(e)}')
            return {'status': 'error', 'message': 'Failed to render email template'}

        email = EmailMessage(subject, email_body, to=[user.email])
        email.content_subtype = "html"
        email.send()

        log_email_attempt(user_id, 'success', 'Email sent')
        return {'status': 'success', 'message': 'Email sent to user'}
    except User.DoesNotExist:
        log_email_attempt(user_id, 'error', 'User not found')
        return {'status': 'error', 'message': 'User not found'}