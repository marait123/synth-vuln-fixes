import os
from django.http import FileResponse, HttpResponse, JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect
from django.contrib.auth import authenticate, login, logout
from django.db import models
from django.conf import settings

class FileMetadata(models.Model):
    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    filename = models.CharField(max_length=255)
    upload_date = models.DateTimeField(auto_now_add=True)

def user_login(request):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)
            return redirect('file_list')
    return render(request, 'login.html')

def user_logout(request):
    logout(request)
    return redirect('login')

@login_required
def file_upload(request):
    if request.method == 'POST':
        file = request.FILES.get('file')
        if file:
            filename = file.name
            file_extension = filename.split('.')[-1]
            if file_extension in ['pdf', 'txt', 'doc']:
                safe_filename = os.path.basename(filename)
                file_path = os.path.join(settings.MEDIA_ROOT, 'user_files', safe_filename)
                with open(file_path, 'wb+') as destination:
                    for chunk in file.chunks():
                        destination.write(chunk)
                FileMetadata.objects.create(user=request.user, filename=safe_filename)
                return redirect('file_list')
    return render(request, 'upload.html')

@login_required
def file_list(request):
    files = FileMetadata.objects.filter(user=request.user)
    return render(request, 'file_list.html', {'files': files})

@csrf_exempt
@login_required
def file_response(request):
    filename = request.POST.get('filename')
    if not filename:
        return JsonResponse({'error': 'No filename provided'}, status=400)
    file_extension = filename.split('.')[-1]
    if file_extension not in ['pdf', 'txt', 'doc']:
        return JsonResponse({'error': 'Invalid file type'}, status=400)
    safe_filename = os.path.basename(filename)
    file_path = os.path.join(settings.MEDIA_ROOT, 'user_files', safe_filename)
    if not os.path.commonprefix([file_path, os.path.join(settings.MEDIA_ROOT, 'user_files')]) == os.path.join(settings.MEDIA_ROOT, 'user_files'):
        return HttpResponse('Invalid file path', status=403)
    try:
        return FileResponse(open(file_path, 'rb'), as_attachment=True, filename=safe_filename)
    except FileNotFoundError:
        return HttpResponse('File not found', status=404)