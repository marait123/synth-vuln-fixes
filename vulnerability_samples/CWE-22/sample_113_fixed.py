import os
import json
from flask import Flask, request, abort, session, redirect, url_for
from werkzeug.security import generate_password_hash, check_password_hash
from werkzeug.utils import secure_filename

app = Flask(__name__)
app.secret_key = 'your_secret_key'

users = {}
user_uploads_dir = "./user_uploads/"

def json_load(file, max_depth=5):
    def hook(obj, current_depth=0):
        if current_depth > max_depth:
            raise ValueError("JSON object too deeply nested")
        if isinstance(obj, dict):
            return {key: hook(value, current_depth + 1) for key, value in obj.items()}
        elif isinstance(obj, list):
            return [hook(elem, current_depth + 1) for elem in obj]
        else:
            return obj
    return json.load(file, object_hook=hook)

@app.route('/register', methods=['POST'])
def register():
    username = request.form.get('username')
    password = request.form.get('password')
    if username in users:
        return abort(400, "Username already exists")
    users[username] = generate_password_hash(password)
    return "User registered successfully"

@app.route('/login', methods=['POST'])
def login():
    username = request.form.get('username')
    password = request.form.get('password')
    if username not in users or not check_password_hash(users[username], password):
        return abort(401, "Invalid credentials")
    session['username'] = username
    return "Logged in successfully"

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('login'))

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'username' not in session:
        return abort(401, "Please log in")
    if 'file' not in request.files:
        return abort(400, "No file part")
    file = request.files['file']
    if file.filename == '':
        return abort(400, "No selected file")
    if file:
        filename = secure_filename(file.filename)
        file.save(os.path.join(user_uploads_dir, filename))
        return "File uploaded successfully"

@app.route('/list_files')
def list_files():
    if 'username' not in session:
        return abort(401, "Please log in")
    files = os.listdir(user_uploads_dir)
    return json.dumps(files)

@app.route("/process_file", methods=["POST"])
def process_file():
    if 'username' not in session:
        return abort(401, "Please log in")
    file_name = request.form.get('filename')
    file_type = request.form.get('filetype')
    if not file_name or not file_type:
        return abort(400, "Missing filename or filetype")
    if '..' in file_name or '/' in file_name or file_type not in ['json', 'txt']:
        return abort(400, "Invalid input")
    file_path = os.path.join(user_uploads_dir, f"{file_name}.{file_type}")
    try:
        if file_type == 'json':
            if os.path.getsize(file_path) > 1 * 1024 * 1024:
                return abort(400, "File size exceeds limit")
            with open(file_path, 'r') as file:
                data = json_load(file)
                return data
        elif file_type == 'txt':
            with open(file_path, 'r') as file:
                return file.read()
    except FileNotFoundError:
        return abort(404, "File not found")
    except ValueError as e:
        return abort(400, str(e))

if __name__ == '__main__':
    app.run(debug=True)