from flask import Flask, request, jsonify
import defusedxml.ElementTree as ET
import sqlite3
import os

app = Flask(__name__)

DATABASE = 'catalog.db'

def get_db():
    db = sqlite3.connect(DATABASE)
    db.row_factory = sqlite3.Row
    return db

def init_db():
    with app.app_context():
        db = get_db()
        with app.open_resource('schema.sql', mode='r') as f:
            db.cursor().executescript(f.read())
        db.commit()

@app.route('/import_catalog', methods=['POST'])
def import_catalog():
    xml_data = request.files['file'].read()
    catalog = ET.parse(xml_data)
    root = catalog.getroot()

    db = get_db()
    cursor = db.cursor()

    for product in root.findall('product'):
        name = product.find('name').text
        price = float(product.find('price').text)
        description = product.find('description').text

        cursor.execute('''
            INSERT INTO products (name, price, description)
            VALUES (?, ?, ?)
        ''', (name, price, description))

    db.commit()
    db.close()

    return "Catalog imported successfully"

@app.route('/products', methods=['GET'])
def get_products():
    db = get_db()
    cursor = db.cursor()
    cursor.execute('SELECT * FROM products')
    products = cursor.fetchall()
    db.close()

    return jsonify([dict(product) for product in products])

@app.route('/product/<int:product_id>', methods=['GET'])
def get_product(product_id):
    db = get_db()
    cursor = db.cursor()
    cursor.execute('SELECT * FROM products WHERE id = ?', (product_id,))
    product = cursor.fetchone()
    db.close()

    if product:
        return jsonify(dict(product))
    else:
        return jsonify({"error": "Product not found"}), 404

if __name__ == '__main__':
    if not os.path.exists(DATABASE):
        init_db()
    app.run(debug=True)