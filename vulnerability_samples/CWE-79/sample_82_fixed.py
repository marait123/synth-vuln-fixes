from aiohttp import web
import jinja2
import aiohttp_jinja2
import asyncio

async def fetch_user_profile(db, username):
    await asyncio.sleep(0.1)
    return db.get(username, {"name": "Unknown", "bio": "No bio available.", "email": "", "age": "", "location": ""})

@aiohttp_jinja2.template('profile.html')
async def user_profile(request):
    username = request.query.get('username', 'default_user')
    user_profile = await fetch_user_profile(request.app['db'], username)
    return {'username': username, 'profile': user_profile}

@aiohttp_jinja2.template('search.html')
async def search_users(request):
    query = request.query.get('q', '')
    results = [user for user in request.app['db'].keys() if query.lower() in user.lower()]
    return {'query': query, 'results': results}

@aiohttp_jinja2.template('login.html')
async def login(request):
    if request.method == 'POST':
        data = await request.post()
        username = data.get('username')
        password = data.get('password')
        if username in request.app['db'] and password == "password":
            return {'logged_in': True, 'username': username}
    return {'logged_in': False}

@aiohttp_jinja2.template('admin.html')
async def admin_view(request):
    return {'users': request.app['db']}

async def init_app():
    app = web.Application()
    aiohttp_jinja2.setup(app, loader=jinja2.FileSystemLoader('/path/to/templates/directory'))
    app.add_routes([
        web.get('/profile', user_profile),
        web.get('/search', search_users),
        web.get('/login', login),
        web.post('/login', login),
        web.get('/admin', admin_view)
    ])
    app['db'] = {
        "john_doe": {"name": "John Doe", "bio": "A developer at XYZ corp.", "email": "john@example.com", "age": "30", "location": "New York"},
        "jane_smith": {"name": "Jane Smith", "bio": "Designer and artist", "email": "jane@example.com", "age": "28", "location": "San Francisco"}
    }
    return app

if __name__ == '__main__':
    web.run_app(init_app())

# Template files (not included in token count):
# profile.html
"""
<html><body>
    <h1>{{ username }}</h1>
    <p>Bio: {{ profile.bio }}</p>
    <p>Email: {{ profile.email }}</p>
    <p>Age: {{ profile.age }}</p>
    <p>Location: {{ profile.location }}</p>
</body></html>
"""

# search.html
"""
<html><body>
    <h1>Search Results for '{{ query }}'</h1>
    <ul>
    {% for user in results %}
        <li><a href='/profile?username={{ user }}'>{{ user }}</a></li>
    {% endfor %}
    </ul>
</body></html>
"""

# login.html
"""
<html><body>
    {% if logged_in %}
        <p>Welcome, {{ username }}!</p>
    {% else %}
        <form method='post'>
            <input name='username'>
            <input name='password' type='password'>
            <button>Login</button>
        </form>
    {% endif %}
</body></html>
"""

# admin.html
"""
<html><body>
    <h1>All Users</h1>
    <ul>
    {% for user, data in users.items() %}
        <li>{{ user }}: {{ data.bio }}</li>
    {% endfor %}
    </ul>
</body></html>
"""