from pyramid.config import Configurator
from pyramid.view import view_config
from pyramid.response import Response
from pyramid.httpexceptions import HTTPFound
from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from pyramid.renderers import render_to_response
import html

Base = declarative_base()
engine = create_engine('sqlite:///users.db')
Session = sessionmaker(bind=engine)

class User(Base):
    __tablename__ = 'users'
    id = Column(Integer, primary_key=True)
    username = Column(String, unique=True)
    email = Column(String)
    password = Column(String)

Base.metadata.create_all(engine)

@view_config(route_name='home', renderer='templates/home.pt')
def home(request):
    return {}

@view_config(route_name='register', renderer='templates/register.pt')
def register(request):
    if request.method == 'POST':
        username = html.escape(request.POST.get('username', ''))
        email = html.escape(request.POST.get('email', ''))
        password = request.POST.get('password', '')
        
        session = Session()
        new_user = User(username=username, email=email, password=password)
        session.add(new_user)
        session.commit()
        session.close()
        
        return HTTPFound(location='/login')
    
    return {}

@view_config(route_name='login', renderer='templates/login.pt')
def login(request):
    if request.method == 'POST':
        username = html.escape(request.POST.get('username', ''))
        password = request.POST.get('password', '')
        
        session = Session()
        user = session.query(User).filter_by(username=username, password=password).first()
        session.close()
        
        if user:
            return HTTPFound(location=f'/profile?username={username}')
        else:
            return {'error': 'Invalid credentials'}
    
    return {}

@view_config(route_name='profile', renderer='templates/profile.pt')
def profile(request):
    username = html.escape(request.params.get('username', ''))
    session = Session()
    user = session.query(User).filter_by(username=username).first()
    session.close()
    
    if user:
        return {'username': username, 'email': user.email}
    else:
        return {'error': 'User not found'}

@view_config(route_name='greet', renderer='templates/greet.pt')
def greet(request):
    name = html.escape(request.params.get('name', 'World'))
    return {'name': name}

def main(global_config, **settings):
    config = Configurator(settings=settings)
    config.include('pyramid_chameleon')
    config.add_route('home', '/')
    config.add_route('register', '/register')
    config.add_route('login', '/login')
    config.add_route('profile', '/profile')
    config.add_route('greet', '/greet')
    config.scan()
    return config.make_wsgi_app()