import logging as logger
import traceback
from django.contrib.auth.models import User
from django.conf import settings
from django.core.mail import send_mail
from django.shortcuts import render
from django.utils.safestring import mark_safe
from smtplib import SMTPException
import re

def log_email_attempt(subject, recipients):
    logger.info(f"Attempting to send email: '{subject}' to {len(recipients)} recipients")

def create_email_body(template, **kwargs):
    return template.format(**kwargs)

def validate_email(email):
    pattern = r'^[\w\.-]+@[\w\.-]+\.\w+$'
    return re.match(pattern, email) is not None

def notify_users_about_challenge(request):
    if request.user.is_authenticated() and request.user.is_superuser:
        if request.method == "GET":
            template_name = "notification_email_data.html"
            return render(request, template_name)
        elif request.method == "POST":
            users = User.objects.exclude(email__exact="").values_list(
                "email", flat=True
            )
            subject = request.POST.get("subject")
            body_template = request.POST.get("body_template")
            body_html_template = request.POST.get("body_html_template")
            
            body = create_email_body(body_template, challenge_name="Sample Challenge")
            body_html = mark_safe(create_email_body(body_html_template, challenge_name="Sample Challenge"))
            
            sender = settings.EMAIL_SENDER
            valid_users = [user for user in users if validate_email(user)]
            
            log_email_attempt(subject, valid_users)
            
            try:
                send_mail(
                    subject,
                    body,
                    sender,
                    [settings.EMAIL],
                    bcc=valid_users,
                    html_message=body_html
                )
                logger.info("Email sent successfully")
            except SMTPException as e:
                logger.error(f"Failed to send email: {str(e)}")
                return render(request, "error_email.html", {"error": str(e)})
        else:
            return render(request, "error404.html")
    else:
        return render(request, "error404.html")