from sanic import Sanic, response
from sanic.request import Request
from sanic.response import redirect
from sanic_jinja2 import SanicJinja2
import sqlite3
import hashlib

app = Sanic("FeedbackApp")
app.config.SECRET = "your-secret-key"
jinja = SanicJinja2(app, pkg_name=__name__)

# Database setup
conn = sqlite3.connect('feedback.db')
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS users
             (id INTEGER PRIMARY KEY, username TEXT, password TEXT)''')
c.execute('''CREATE TABLE IF NOT EXISTS feedbacks
             (id INTEGER PRIMARY KEY, user_id INTEGER, content TEXT)''')
conn.commit()

@app.route("/register", methods=["GET", "POST"])
async def register(request):
    if request.method == "POST":
        username = request.form.get("username")
        password = request.form.get("password")
        hashed_password = hashlib.sha256(password.encode()).hexdigest()
        c.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, hashed_password))
        conn.commit()
        return redirect("/login")
    return jinja.render("register.html", request)

@app.route("/login", methods=["GET", "POST"])
async def login(request):
    if request.method == "POST":
        username = request.form.get("username")
        password = request.form.get("password")
        hashed_password = hashlib.sha256(password.encode()).hexdigest()
        c.execute("SELECT id FROM users WHERE username = ? AND password = ?", (username, hashed_password))
        user = c.fetchone()
        if user:
            request['session']['user_id'] = user[0]
            return redirect("/dashboard")
    return jinja.render("login.html", request)

@app.route("/dashboard")
async def dashboard(request):
    user_id = request['session'].get('user_id')
    if not user_id:
        return redirect("/login")
    c.execute("SELECT content FROM feedbacks WHERE user_id = ?", (user_id,))
    feedbacks = c.fetchall()
    return jinja.render("dashboard.html", request, feedbacks=feedbacks)

@app.route("/submit_feedback", methods=["GET", "POST"])
async def submit_feedback(request):
    user_id = request['session'].get('user_id')
    if not user_id:
        return redirect("/login")
    if request.method == "POST":
        user_feedback = request.form.get("feedback")
        c.execute("INSERT INTO feedbacks (user_id, content) VALUES (?, ?)", (user_id, user_feedback))
        conn.commit()
        return jinja.render("feedback_received.html", request, feedback=user_feedback)
    return jinja.render("submit_feedback.html", request)

@app.route("/search", methods=["GET"])
async def search_feedbacks(request):
    query = request.args.get("q", "")
    c.execute("SELECT content FROM feedbacks WHERE content LIKE ?", (f"%{query}%",))
    results = c.fetchall()
    return jinja.render("search_results.html", request, query=query, results=results)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000)