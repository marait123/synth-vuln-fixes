from starlette.applications import Starlette
from starlette.responses import RedirectResponse
from starlette.routing import Route
from starlette.requests import Request
from starlette.templating import Jinja2Templates
import sqlite3
from markupsafe import escape

# Database setup
conn = sqlite3.connect('users.db')
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS users
             (username TEXT, email TEXT, bio TEXT)''')
conn.commit()

templates = Jinja2Templates(directory="templates")

async def homepage(request):
    user_input = request.query_params.get('name', 'World')
    return templates.TemplateResponse("homepage.html", {"request": request, "name": user_input})

async def register(request):
    if request.method == "POST":
        form_data = await request.form()
        username = escape(form_data.get('username'))
        email = escape(form_data.get('email'))
        bio = escape(form_data.get('bio'))
        
        c.execute("INSERT INTO users VALUES (?, ?, ?)", (username, email, bio))
        conn.commit()
        
        return RedirectResponse(url=f"/profile?username={username}", status_code=303)
    
    return templates.TemplateResponse("register.html", {"request": request})

async def profile(request):
    username = escape(request.query_params.get('username', ''))
    c.execute("SELECT * FROM users WHERE username=?", (username,))
    user = c.fetchone()
    
    if user:
        return templates.TemplateResponse("profile.html", {
            "request": request,
            "username": user[0],
            "email": user[1],
            "bio": user[2]
        })
    else:
        return templates.TemplateResponse("user_not_found.html", {"request": request})

routes = [
    Route("/", homepage),
    Route("/register", register, methods=["GET", "POST"]),
    Route("/profile", profile),
]

app = Starlette(debug=True, routes=routes)