import jinja2
from flask import Flask, render_template_string, request, redirect, url_for, session
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = 'your_secret_key_here'

# Mock user database
users = {
    'admin': {'password': generate_password_hash('admin123'), 'bio': 'I am the admin', 'interests': ['coding', 'security']},
    'user1': {'password': generate_password_hash('user123'), 'bio': 'Regular user', 'interests': ['reading', 'gaming']}
}

@app.route('/')
def home():
    env = jinja2.Environment(loader=jinja2.FileSystemLoader('templates'), autoescape=True)
    template = env.get_template('home.html')
    return template.render(username=session.get('username', 'Guest'))

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        if username in users and check_password_hash(users[username]['password'], password):
            session['username'] = username
            return redirect(url_for('dashboard'))
        return 'Invalid credentials'
    return render_template_string('<form method="post"><input name="username"><input name="password" type="password"><input type="submit"></form>')

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('home'))

@app.route('/dashboard')
def dashboard():
    if 'username' not in session:
        return redirect(url_for('login'))
    env = jinja2.Environment(loader=jinja2.FileSystemLoader('templates'), autoescape=True)
    username = session['username']
    bio = users[username]['bio']
    interests = ','.join(users[username]['interests'])
    template = env.get_template('dashboard.html')
    return template.render(username=username, bio=bio, interests=interests)

@app.route('/profile/<username>')
def profile(username):
    env = jinja2.Environment(loader=jinja2.FileSystemLoader('templates'), autoescape=True)
    if username not in users:
        return 'User not found'
    bio = users[username]['bio']
    interests = users[username]['interests']
    template = env.get_template('profile.html')
    return template.render(username=username, bio=bio, interests=interests)

@app.route('/search')
def search():
    env = jinja2.Environment(loader=jinja2.FileSystemLoader('templates'), autoescape=True)
    query = request.args.get('q', '')
    results = [user for user in users if query.lower() in user.lower()]
    template = env.get_template('search.html')
    return template.render(query=query, results=results)

if __name__ == '__main__':
    app.run(debug=True)