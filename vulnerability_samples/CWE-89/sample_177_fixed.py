import mysql.connector
import os
import logging
import hashlib

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def get_db_connection():
    db_user = os.environ.get('DB_USER')
    db_password = os.environ.get('DB_PASSWORD')
    db_name = os.environ.get('DB_NAME')
    try:
        connection = mysql.connector.connect(user=db_user, password=db_password, database=db_name)
        return connection
    except mysql.connector.Error as err:
        logger.error(f"Error connecting to database: {err}")
        return None

def query_data(event, context):
    connection = get_db_connection()
    if not connection:
        return {"error": "Database connection failed"}
    
    cursor = connection.cursor()
    user_input = event['user_input']
    try:
        cursor.execute("SELECT * FROM users WHERE username = %s", (user_input,))
        result = cursor.fetchall()
        return {"data": result}
    except mysql.connector.Error as err:
        logger.error(f"Error executing query: {err}")
        return {"error": "Query execution failed"}
    finally:
        cursor.close()
        connection.close()

def authenticate_user(username, password):
    connection = get_db_connection()
    if not connection:
        return False
    
    cursor = connection.cursor()
    hashed_password = hashlib.sha256(password.encode()).hexdigest()
    
    try:
        cursor.execute("SELECT * FROM users WHERE username = %s AND password = %s", (username, hashed_password))
        result = cursor.fetchone()
        return result is not None
    except mysql.connector.Error as err:
        logger.error(f"Error authenticating user: {err}")
        return False
    finally:
        cursor.close()
        connection.close()

def register_user(username, password, email):
    connection = get_db_connection()
    if not connection:
        return False
    
    cursor = connection.cursor()
    hashed_password = hashlib.sha256(password.encode()).hexdigest()
    
    try:
        cursor.execute("INSERT INTO users (username, password, email) VALUES (%s, %s, %s)", (username, hashed_password, email))
        connection.commit()
        return True
    except mysql.connector.Error as err:
        logger.error(f"Error registering user: {err}")
        connection.rollback()
        return False
    finally:
        cursor.close()
        connection.close()

def update_user_info(user_id, new_email):
    connection = get_db_connection()
    if not connection:
        return False
    
    cursor = connection.cursor()
    
    try:
        cursor.execute("UPDATE users SET email = %s WHERE id = %s", (new_email, user_id))
        connection.commit()
        return True
    except mysql.connector.Error as err:
        logger.error(f"Error updating user info: {err}")
        connection.rollback()
        return False
    finally:
        cursor.close()
        connection.close()