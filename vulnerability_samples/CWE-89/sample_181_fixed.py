import logging
from sqlalchemy import create_engine, text
import getpass

def create_db_engine():
    database_url = 'sqlite:///mydatabase.db'
    engine = create_engine(database_url)
    return engine

def fetch_user_details(username):
    query = text("SELECT * FROM users WHERE username = :username")
    engine = create_db_engine()
    try:
        with engine.connect() as conn:
            result = conn.execute(query, {'username': username})
            return [dict(row) for row in result]
    except Exception as e:
        logging.error(f"Error fetching user details: {e}")
        return None

def add_user(username, password):
    query = text("INSERT INTO users (username, password) VALUES (:username, :password)")
    engine = create_db_engine()
    try:
        with engine.connect() as conn:
            conn.execute(query, {'username': username, 'password': password})
            conn.commit()
        print(f"User {username} added successfully.")
    except Exception as e:
        logging.error(f"Error adding user: {e}")

def update_user_password(username, new_password):
    query = text("UPDATE users SET password = :password WHERE username = :username")
    engine = create_db_engine()
    try:
        with engine.connect() as conn:
            result = conn.execute(query, {'username': username, 'password': new_password})
            conn.commit()
        if result.rowcount > 0:
            print(f"Password updated for user {username}.")
        else:
            print(f"User {username} not found.")
    except Exception as e:
        logging.error(f"Error updating user password: {e}")

def delete_user(username):
    query = text("DELETE FROM users WHERE username = :username")
    engine = create_db_engine()
    try:
        with engine.connect() as conn:
            result = conn.execute(query, {'username': username})
            conn.commit()
        if result.rowcount > 0:
            print(f"User {username} deleted successfully.")
        else:
            print(f"User {username} not found.")
    except Exception as e:
        logging.error(f"Error deleting user: {e}")

def main():
    while True:
        print("\n1. Fetch user details")
        print("2. Add new user")
        print("3. Update user password")
        print("4. Delete user")
        print("5. Exit")
        choice = input("Enter your choice (1-5): ")

        if choice == '1':
            username = input("Enter username to fetch details: ")
            details = fetch_user_details(username)
            print(details if details else "User not found.")
        elif choice == '2':
            username = input("Enter new username: ")
            password = getpass.getpass("Enter password: ")
            add_user(username, password)
        elif choice == '3':
            username = input("Enter username: ")
            new_password = getpass.getpass("Enter new password: ")
            update_user_password(username, new_password)
        elif choice == '4':
            username = input("Enter username to delete: ")
            delete_user(username)
        elif choice == '5':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()