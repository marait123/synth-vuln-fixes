from django.http import JsonResponse
from django.views import View
from django.db import models
from django.utils.html import escape
from django.db.models import Q

class Person(models.Model):
    first_name = models.CharField(max_length=100)
    last_name = models.CharField(max_length=100)
    birth_date = models.DateField()
    email = models.EmailField()
    city = models.CharField(max_length=100)
    country = models.CharField(max_length=100)
    profession = models.CharField(max_length=100)

class SearchPersonView(View):
    def post(self, request):
        birth_date = self.validate_input(request.POST.get('birth_date'))
        first_name = self.validate_input(request.POST.get('first_name'))
        last_name = self.validate_input(request.POST.get('last_name'))
        city = self.validate_input(request.POST.get('city'))
        country = self.validate_input(request.POST.get('country'))
        profession = self.validate_input(request.POST.get('profession'))

        query = Q()
        params = []

        if birth_date:
            query &= Q(birth_date=birth_date)
        if first_name:
            query &= Q(first_name__icontains=first_name)
        if last_name:
            query &= Q(last_name__icontains=last_name)
        if city:
            query &= Q(city=city)
        if country:
            query &= Q(country=country)
        if profession:
            query &= Q(profession=profession)

        results = Person.objects.filter(query)
        return self.display_results(results)

    def display_results(self, results):
        formatted_results = []
        for person in results:
            formatted_results.append({
                'id': person.id,
                'name': f"{escape(person.first_name)} {escape(person.last_name)}",
                'birth_date': person.birth_date.strftime('%Y-%m-%d'),
                'email': escape(person.email),
                'location': f"{escape(person.city)}, {escape(person.country)}",
                'profession': escape(person.profession)
            })
        return JsonResponse(formatted_results, safe=False)

    def validate_input(self, value, max_length=100):
        if value and isinstance(value, str) and len(value) <= max_length:
            return value
        return None