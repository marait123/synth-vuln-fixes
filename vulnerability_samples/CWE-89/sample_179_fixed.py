import psycopg2
import boto3
import json
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def get_db_connection():
    ssm = boto3.client('ssm')
    database = ssm.get_parameter(Name='t2-db-dbname')['Parameter']['Value']
    user = ssm.get_parameter(Name='t2-db-user')['Parameter']['Value']
    port = ssm.get_parameter(Name='t2-db-port')['Parameter']['Value']
    password = ssm.get_parameter(Name='t2-db-password', WithDecryption=True)['Parameter']['Value']
    host = ssm.get_parameter(Name='t2-db-host', WithDecryption=True)['Parameter']['Value']
    return psycopg2.connect(database=database, user=user, password=password, host=host, port=port)

def lambda_handler(event, context):
    try:
        engine = get_db_connection()
        cur = engine.cursor()
        
        tableName = boto3.client('ssm').get_parameter(Name='t2-db-tablename')['Parameter']['Value']
        username = event['username']
        language = event['translateTarget']
        
        # Fixed SQL query using parameterized query
        cur.execute("SELECT * FROM {} WHERE id = %s".format(tableName), (username,))
        
        result = cur.fetchone()
        returnList = ['None'] if result is None else list(result)
        
        response = {
            'searchedFiles': returnList,
            'language': language
        }
        
        engine.commit()
        return response
    except Exception as e:
        logger.error(f"An error occurred: {str(e)}")
        raise
    finally:
        if 'engine' in locals():
            engine.close()

def insert_user(username, email):
    try:
        engine = get_db_connection()
        cur = engine.cursor()
        tableName = boto3.client('ssm').get_parameter(Name='t2-db-tablename')['Parameter']['Value']
        
        cur.execute("INSERT INTO {} (id, email) VALUES (%s, %s)".format(tableName), (username, email))
        engine.commit()
        logger.info(f"User {username} inserted successfully")
    except Exception as e:
        logger.error(f"Error inserting user: {str(e)}")
        raise
    finally:
        if 'engine' in locals():
            engine.close()

def update_user_language(username, language):
    try:
        engine = get_db_connection()
        cur = engine.cursor()
        tableName = boto3.client('ssm').get_parameter(Name='t2-db-tablename')['Parameter']['Value']
        
        cur.execute("UPDATE {} SET language = %s WHERE id = %s".format(tableName), (language, username))
        engine.commit()
        logger.info(f"Language updated for user {username}")
    except Exception as e:
        logger.error(f"Error updating user language: {str(e)}")
        raise
    finally:
        if 'engine' in locals():
            engine.close()

def main():
    # Simulate different operations
    event1 = {'username': 'john_doe', 'translateTarget': 'es'}
    lambda_handler(event1, None)
    
    insert_user('jane_doe', 'jane@example.com')
    update_user_language('jane_doe', 'fr')

if __name__ == "__main__":
    main()