from pyramid.config import Configurator
from pyramid.httpexceptions import HTTPFound
from pyramid.response import Response
from pyramid.view import view_config
from pyramid.authentication import AuthTktAuthenticationPolicy
from pyramid.authorization import ACLAuthorizationPolicy
from pyramid.security import (
    remember,
    forget,
    Authenticated,
    Everyone,
)
from waitress import serve
import sqlite3
import bcrypt

def init_db():
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS users
                 (id INTEGER PRIMARY KEY, username TEXT, password TEXT)''')
    conn.commit()
    conn.close()

def get_user(username, password):
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute("SELECT id, password FROM users WHERE username=?", (username,))
    result = c.fetchone()
    conn.close()
    if result and bcrypt.checkpw(password.encode('utf-8'), result[1]):
        return result[0]
    return None

@view_config(route_name='home', renderer='string', permission='view')
def home_view(request):
    user_id = request.authenticated_userid
    return f'Welcome, user {user_id}! This is your home page.'

@view_config(route_name='login', renderer='string')
def login_view(request):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        user_id = get_user(username, password)
        if user_id:
            headers = remember(request, user_id)
            response = HTTPFound(location='/home', headers=headers)
            response.set_cookie('session_id', f'session-{user_id}', samesite='Lax', secure=True, httponly=True)
            return response
    return 'Please log in: <form method="POST"><input name="username"><input name="password" type="password"><input type="submit"></form>'

@view_config(route_name='logout')
def logout_view(request):
    headers = forget(request)
    return HTTPFound(location='/', headers=headers)

@view_config(route_name='register', renderer='string')
def register_view(request):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        hashed_password = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt())
        conn = sqlite3.connect('users.db')
        c = conn.cursor()
        c.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, hashed_password))
        conn.commit()
        conn.close()
        return HTTPFound(location='/login')
    return 'Register: <form method="POST"><input name="username"><input name="password" type="password"><input type="submit"></form>'

def main():
    init_db()
    settings = {
        'auth.secret': 'secret',
    }
    config = Configurator(settings=settings)
    config.set_authentication_policy(AuthTktAuthenticationPolicy(settings['auth.secret']))
    config.set_authorization_policy(ACLAuthorizationPolicy())
    config.add_route('home', '/home')
    config.add_route('login', '/login')
    config.add_route('logout', '/logout')
    config.add_route('register', '/register')
    config.scan()
    return config.make_wsgi_app()

if __name__ == '__main__':
    app = main()
    serve(app, host='0.0.0.0', port=6543)