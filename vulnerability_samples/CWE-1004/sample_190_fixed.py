from pyramid.response import Response
from pyramid.httpexceptions import HTTPFound
from pyramid.security import remember, forget, authenticated_userid
from pyramid.view import view_config
import os
import logging

# Configure logging
logging.basicConfig(filename='app.log', level=logging.INFO)

UPLOAD_DIR = "/path/to/upload/directory"

def get_user(request):
    user_id = authenticated_userid(request)
    if user_id:
        return {'id': user_id, 'name': f'User {user_id}'}
    return None

@view_config(route_name='login', renderer='json')
def login(request):
    username = request.POST.get('username')
    password = request.POST.get('password')
    if username == 'admin' and password == 'secret':
        headers = remember(request, 1)
        return HTTPFound(location=request.route_url('home'), headers=headers)
    return {'message': 'Login failed'}

@view_config(route_name='logout')
def logout(request):
    headers = forget(request)
    return HTTPFound(location=request.route_url('home'), headers=headers)

@view_config(route_name='home', renderer='json')
def home(request):
    user = get_user(request)
    if not user:
        return HTTPFound(location=request.route_url('login'))
    return {'message': f'Welcome, {user["name"]}!'}

@view_config(route_name='upload', request_method='POST')
def process_uploaded_file(request):
    user = get_user(request)
    if not user:
        return HTTPFound(location=request.route_url('login'))

    try:
        uploaded_file = request.POST.get('file').file
        file_name = request.POST.get('file').filename
        if not file_name.endswith('.txt'):
            return Response('Only text files are allowed', status=400)

        file_path = os.path.join(UPLOAD_DIR, file_name)
        with open(file_path, 'wb') as output_file:
            while True:
                data = uploaded_file.read(4096)
                if not data:
                    break
                output_file.write(data)

        logging.info(f"File uploaded: {file_name} by user {user['id']}")
        response = HTTPFound(location=request.route_url('home'))
        response.set_cookie('upload_status', value='success', secure=True, httponly=True, samesite='Lax')
        return response
    except Exception as e:
        logging.error(f"Upload error: {str(e)}")
        return Response('Upload failed', status=500)

@view_config(route_name='list_files', renderer='json')
def list_files(request):
    user = get_user(request)
    if not user:
        return HTTPFound(location=request.route_url('login'))

    files = [f for f in os.listdir(UPLOAD_DIR) if f.endswith('.txt')]
    return {'files': files}

@view_config(route_name='download')
def download_file(request):
    user = get_user(request)
    if not user:
        return HTTPFound(location=request.route_url('login'))

    filename = request.matchdict['filename']
    file_path = os.path.join(UPLOAD_DIR, filename)
    if not os.path.exists(file_path):
        return Response('File not found', status=404)

    response = Response(content_type='text/plain')
    response.app_iter = open(file_path, 'rb')
    response.content_disposition = f'attachment; filename="{filename}"'
    return response