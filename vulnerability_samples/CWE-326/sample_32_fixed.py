# Django view
from django.http import HttpResponse
import ssl
import socket
import logging
from django.db import models

class ServerData(models.Model):
    server_name = models.CharField(max_length=100)
    data = models.TextField()

def process_data(data):
    # Simple data processing
    return data.upper()

def connect_to_server(server, port):
    context = ssl.create_default_context()
    try:
        with socket.create_connection((server, port)) as sock:
            with context.wrap_socket(sock, server_hostname=server) as ssock:
                data = ssock.recv(1024).decode('utf-8')
                processed_data = process_data(data)
                ServerData.objects.create(server_name=server, data=processed_data)
                return processed_data
    except Exception as e:
        logging.error(f"Error connecting to {server}: {str(e)}")
        return None

def view(request):
    servers = [
        ('example.com', 443),
        ('secure.example.org', 443),
        ('api.example.net', 443)
    ]
    
    results = []
    for server, port in servers:
        result = connect_to_server(server, port)
        if result:
            results.append(f"Data from {server}: {result}")
    
    if results:
        return HttpResponse("<br>".join(results))
    else:
        return HttpResponse("No data retrieved from servers")

# Additional non-vulnerable code
def get_server_data(server_name):
    try:
        data = ServerData.objects.get(server_name=server_name)
        return data.data
    except ServerData.DoesNotExist:
        return None

def clear_server_data():
    ServerData.objects.all().delete()
    return HttpResponse("All server data cleared")