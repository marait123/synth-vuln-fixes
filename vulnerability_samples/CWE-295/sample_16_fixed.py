import os
import json
import logging
from django.http import JsonResponse
from django.core.cache import cache
import urllib3
from datetime import datetime

# Load configuration
with open('config.json', 'r') as config_file:
    config = json.load(config_file)

# Set up logging
logging.basicConfig(filename='api_requests.log', level=logging.INFO)

def request_django(request):
    http = urllib3.PoolManager()  # Fixed line
    
    transformed_data = {}
    for endpoint in config['api_endpoints']:
        cache_key = f"api_data_{endpoint['name']}"
        cached_data = cache.get(cache_key)
        
        if cached_data:
            data = cached_data
        else:
            try:
                response = http.request('GET', endpoint['url'])
                data = json.loads(response.data.decode('utf-8'))
                cache.set(cache_key, data, timeout=endpoint['cache_timeout'])
            except Exception as e:
                logging.error(f"Error fetching data from {endpoint['url']}: {str(e)}")
                data = {}
        
        transformed_data[endpoint['name']] = transform_data(data, endpoint['transform_type'])
    
    return JsonResponse(transformed_data)

def transform_data(data, transform_type):
    if transform_type == 'count':
        return {key: len(value) if isinstance(value, (list, dict)) else 1 for key, value in data.items()}
    elif transform_type == 'timestamp':
        return {key: str(datetime.now()) for key in data.keys()}
    elif transform_type == 'uppercase':
        return {key.upper(): value.upper() if isinstance(value, str) else value for key, value in data.items()}
    else:
        return data

def health_check(request):
    http = urllib3.PoolManager()  # Fixed line
    status = {}
    for endpoint in config['api_endpoints']:
        try:
            response = http.request('GET', endpoint['url'])
            status[endpoint['name']] = 'OK' if response.status == 200 else 'ERROR'
        except Exception:
            status[endpoint['name']] = 'ERROR'
    
    return JsonResponse(status)