import cherrypy
import sqlite3
import ssl
import json
import os

# Load configuration
with open('config.json', 'r') as config_file:
    config = json.load(config_file)

# Database setup
def init_db():
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS users
                 (id INTEGER PRIMARY KEY, username TEXT, password TEXT)''')
    conn.commit()
    conn.close()

init_db()

class UserManagement:
    @cherrypy.expose
    def register(self, username, password):
        conn = sqlite3.connect('users.db')
        c = conn.cursor()
        c.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, password))
        conn.commit()
        conn.close()
        return f"User {username} registered successfully!"

    @cherrypy.expose
    def login(self, username, password):
        conn = sqlite3.connect('users.db')
        c = conn.cursor()
        c.execute("SELECT * FROM users WHERE username=? AND password=?", (username, password))
        user = c.fetchone()
        conn.close()
        if user:
            return f"Welcome, {username}!"
        else:
            return "Invalid credentials."

class HelloWorld:
    @cherrypy.expose
    def index(self):
        return "Hello CherryPy!"

    @cherrypy.expose
    def about(self):
        return "This is a sample CherryPy application."

    user_management = UserManagement()

if __name__ == '__main__':
    cherrypy.config.update({
        'server.socket_host': config['server']['host'],
        'server.socket_port': config['server']['port'],
        'server.ssl_module': 'builtin',
        'server.ssl_certificate': config['ssl']['certificate'],
        'server.ssl_private_key': config['ssl']['private_key'],
        'server.ssl_context': ssl.create_default_context()  # Fixed
    })
    cherrypy.quickstart(HelloWorld())