import sys
import json
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QTextEdit, QVBoxLayout, QLabel
import urllib3
import configparser
import certifi

class ConfigManager:
    @staticmethod
    def load_config():
        config = configparser.ConfigParser()
        config.read('config.ini')
        return config

class App(QWidget):
    def __init__(self):
        super().__init__()
        self.init_ui()
        self.config = ConfigManager.load_config()

    def init_ui(self):
        layout = QVBoxLayout()
        self.setLayout(layout)

        self.button = QPushButton('Make Request', self)
        self.button.clicked.connect(self.make_request)
        layout.addWidget(self.button)

        self.status_label = QLabel('Status: Ready', self)
        layout.addWidget(self.status_label)

        self.response_text = QTextEdit(self)
        self.response_text.setReadOnly(True)
        layout.addWidget(self.response_text)

        self.setGeometry(300, 300, 400, 300)
        self.setWindowTitle('Secure Request App')
        self.show()

    def make_request(self):
        try:
            response = self.request()
            self.display_response(response)
        except Exception as e:
            self.status_label.setText(f'Error: {str(e)}')

    def request(self):
        url = self.config.get('Network', 'url', fallback='https://example.com')
        http = urllib3.PoolManager(cert_reqs='CERT_REQUIRED', ca_certs=certifi.where())
        response = http.request('GET', url)
        return response

    def display_response(self, response):
        self.status_label.setText(f'Status: {response.status}')
        try:
            data = json.loads(response.data.decode('utf-8'))
            formatted_data = json.dumps(data, indent=2)
            self.response_text.setPlainText(formatted_data)
        except json.JSONDecodeError:
            self.response_text.setPlainText(response.data.decode('utf-8'))

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = App()
    sys.exit(app.exec_())