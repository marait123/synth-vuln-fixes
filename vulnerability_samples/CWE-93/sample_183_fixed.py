import os
from flask import Flask, request, render_template, session, redirect, url_for
from pathlib import Path
import sqlite3

app = Flask(__name__)
app.secret_key = 'your_secret_key'

def get_db():
    db = sqlite3.connect('users.db')
    db.row_factory = sqlite3.Row
    return db

def sanitize_input(text):
    return text.replace('\n', '').replace('\r', '')

@app.route('/', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = sanitize_input(request.form['username'])
        password = sanitize_input(request.form['password'])
        db = get_db()
        user = db.execute('SELECT * FROM users WHERE username = ? AND password = ?', (username, password)).fetchone()
        db.close()
        if user:
            session['user_id'] = user['id']
            return redirect(url_for('list_notes'))
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.pop('user_id', None)
    return redirect(url_for('login'))

@app.route('/notes')
def list_notes():
    if 'user_id' not in session:
        return redirect(url_for('login'))
    notes_directory = Path(f'./notes/{session["user_id"]}')
    notes = [f.name for f in notes_directory.glob('*.txt')]
    return render_template('list_notes.html', notes=notes)

@app.route('/view_note/<title>')
def view_note(title):
    if 'user_id' not in session:
        return redirect(url_for('login'))
    notes_directory = Path(f'./notes/{session["user_id"]}')
    file_path = notes_directory / f"{sanitize_input(title)}.txt"
    if not os.path.abspath(file_path).startswith(os.path.abspath(notes_directory)):
        return "Invalid file path", 400
    with open(file_path, 'r') as file:
        content = file.read()
    return render_template('view_note.html', title=title, content=content)

@app.route('/write_note', methods=['GET', 'POST'])
def write_note():
    if 'user_id' not in session:
        return redirect(url_for('login'))
    if request.method == 'POST':
        note_content = sanitize_input(request.form.get('note'))
        note_title = sanitize_input(request.form.get('title'))
        note_title_path = Path(note_title).name 
        notes_directory = Path(f'./notes/{session["user_id"]}')
        file_path = notes_directory / f"{note_title_path}.txt"
        if not os.path.abspath(file_path).startswith(os.path.abspath(notes_directory)):
            return "Invalid file path", 400
        with open(file_path, 'w') as file:
            file.write(note_content)
        return redirect(url_for('list_notes'))
    return render_template('write_note.html')

if __name__ == '__main__':
    app.run(debug=True)