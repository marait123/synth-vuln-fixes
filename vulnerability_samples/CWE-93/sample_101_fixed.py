from pyramid.config import Configurator
from pyramid.view import view_config
from pyramid.response import Response
from pyramid.security import remember, forget, authenticated_userid
from pyramid.httpexceptions import HTTPFound
import sqlite3
import os
import html

DB_NAME = 'users.db'

def init_db():
    conn = sqlite3.connect(DB_NAME)
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS users
                 (id INTEGER PRIMARY KEY, username TEXT, password TEXT, email TEXT)''')
    conn.commit()
    conn.close()

def get_user(username):
    conn = sqlite3.connect(DB_NAME)
    c = conn.cursor()
    c.execute("SELECT * FROM users WHERE username=?", (username,))
    user = c.fetchone()
    conn.close()
    return user

@view_config(route_name='home', renderer='templates/home.jinja2')
def home(request):
    return {'username': authenticated_userid(request)}

@view_config(route_name='login', renderer='templates/login.jinja2')
def login(request):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        user = get_user(username)
        if user and user[2] == password:
            headers = remember(request, username)
            return HTTPFound(location=request.route_url('dashboard'), headers=headers)
    return {}

@view_config(route_name='logout')
def logout(request):
    headers = forget(request)
    return HTTPFound(location=request.route_url('home'), headers=headers)

@view_config(route_name='register', renderer='templates/register.jinja2')
def register(request):
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        email = request.POST.get('email')
        conn = sqlite3.connect(DB_NAME)
        c = conn.cursor()
        c.execute("INSERT INTO users (username, password, email) VALUES (?, ?, ?)",
                  (username, password, email))
        conn.commit()
        conn.close()
        return HTTPFound(location=request.route_url('login'))
    return {}

@view_config(route_name='dashboard', renderer='templates/dashboard.jinja2')
def dashboard(request):
    username = authenticated_userid(request)
    if not username:
        return HTTPFound(location=request.route_url('login'))
    user = get_user(username)
    return {'user': user}

@view_config(route_name='export_data')
def export_user_data(request):
    username = authenticated_userid(request)
    if not username:
        return HTTPFound(location=request.route_url('login'))
    user = get_user(username)
    data = f"Username: {html.escape(user[1])}\nEmail: {html.escape(user[3])}"
    filename = f"user_data_{html.escape(username)}.txt"
    with open(filename, 'w') as f:
        f.write(data)
    return Response(f"Data exported to {html.escape(filename)}")

if __name__ == '__main__':
    init_db()
    with Configurator() as config:
        config.include('pyramid_jinja2')
        config.add_route('home', '/')
        config.add_route('login', '/login')
        config.add_route('logout', '/logout')
        config.add_route('register', '/register')
        config.add_route('dashboard', '/dashboard')
        config.add_route('export_data', '/export')
        config.scan()
        app = config.make_wsgi_app()