from flask import Flask, request, session, render_template, redirect, url_for
import os
import time
import sqlite3

app = Flask(__name__)
app.secret_key = os.urandom(24)

def get_db():
    db = sqlite3.connect('chat.db')
    db.row_factory = sqlite3.Row
    return db

def sanitize_input(text):
    return text.replace('\n', '').replace('\r', '')

@app.route('/')
def home():
    if 'username' in session:
        return redirect(url_for('chat'))
    return render_template('home.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = sanitize_input(request.form['username'])
        password = request.form['password']
        db = get_db()
        db.execute('INSERT INTO users (username, password) VALUES (?, ?)', (username, password))
        db.commit()
        return redirect(url_for('login'))
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = sanitize_input(request.form['username'])
        password = request.form['password']
        db = get_db()
        user = db.execute('SELECT * FROM users WHERE username = ? AND password = ?', (username, password)).fetchone()
        if user:
            session['username'] = username
            return redirect(url_for('chat'))
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('home'))

@app.route('/chat')
def chat():
    if 'username' not in session:
        return redirect(url_for('login'))
    return render_template('chat.html', username=session['username'])

@app.route('/send_message', methods=['POST'])
def send_message():
    if 'username' in session:
        username = sanitize_input(session['username'])
        user_message = sanitize_input(request.form['message'])
        timestamp = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
        with open("chat_log.txt", "a") as log_file:
            log_file.write(f"[{timestamp}] {username}: {user_message}\n")
        return 'Message sent'
    else:
        return 'User not logged in', 401

@app.route('/view_history')
def view_history():
    if 'username' not in session:
        return redirect(url_for('login'))
    with open("chat_log.txt", "r") as log_file:
        history = log_file.readlines()
    return render_template('history.html', history=history)

if __name__ == '__main__':
    app.run(debug=True)