import urllib3
import json
import time
from textblob import TextBlob

class UserPostFetcher:
    def __init__(self):
        self.https = urllib3.HTTPSConnectionPool('jsonplaceholder.typicode.com')
        self.cache = {}

    def fetch_user_posts(self, user_id):
        if user_id in self.cache:
            return self.cache[user_id]

        retries = 3
        while retries > 0:
            try:
                response = self.https.request('GET', f'/posts?userId={user_id}')
                if response.status == 200:
                    posts = json.loads(response.data.decode('utf-8'))
                    processed_posts = self.process_posts(posts)
                    self.cache[user_id] = processed_posts
                    return processed_posts
                else:
                    print(f"Failed to fetch data: HTTP Status Code {response.status}")
            except urllib3.exceptions.HTTPError as e:
                print(f"HTTP Error: {e}")
            except json.decoder.JSONDecodeError:
                print("Error decoding JSON response.")
            
            retries -= 1
            if retries > 0:
                print(f"Retrying... ({retries} attempts left)")
                time.sleep(1)

        return None

    def process_posts(self, posts):
        processed = []
        for post in posts:
            sentiment = self.analyze_sentiment(post['body'])
            processed.append({
                'id': post['id'],
                'title': post['title'].title(),
                'summary': post['body'][:50],
                'sentiment': sentiment
            })
        return processed

    def analyze_sentiment(self, text):
        blob = TextBlob(text)
        return 'positive' if blob.sentiment.polarity > 0 else 'negative' if blob.sentiment.polarity < 0 else 'neutral'

def main():
    fetcher = UserPostFetcher()
    while True:
        user_id = input("Enter user ID (or 'q' to quit): ")
        if user_id.lower() == 'q':
            break
        try:
            user_id = int(user_id)
            posts = fetcher.fetch_user_posts(user_id)
            if posts:
                for post in posts:
                    print(f"Post ID: {post['id']}")
                    print(f"Title: {post['title']}")
                    print(f"Summary: {post['summary']}...")
                    print(f"Sentiment: {post['sentiment']}")
                    print("---")
            else:
                print("No posts found or error occurred.")
        except ValueError:
            print("Invalid user ID. Please enter a number.")

if __name__ == "__main__":
    main()