import os
from bottle import route, run, request, response
import distributed.security
import logging
import html

# Set up logging
logging.basicConfig(filename='app.log', level=logging.INFO)

# In-memory user database
users = {}

@route('/register', method='POST')
def register():
    username = request.forms.get('username')
    password = request.forms.get('password')
    
    if username and password:
        if username not in users:
            users[username] = password
            logging.info(f"User registered: {username}")
            return "Registration successful"
        else:
            response.status = 400
            return "Username already exists"
    else:
        response.status = 400
        return "Invalid input"

@route('/login', method='POST')
def login():
    username = request.forms.get('username')
    password = request.forms.get('password')

    if username in users and users[username] == password:
        security = distributed.security.Security(require_encryption=True)  # Fixed line
        logging.info(f"User logged in: {username}")
        response.status = 200
        return "Login successful"
    else:
        response.status = 401
        return "Unauthorized"

@route('/profile/<username>')
def profile(username):
    if username in users:
        return f"Profile of {html.escape(username)}"
    else:
        response.status = 404
        return "User not found"

@route('/update_password', method='POST')
def update_password():
    username = request.forms.get('username')
    old_password = request.forms.get('old_password')
    new_password = request.forms.get('new_password')

    if username in users and users[username] == old_password:
        users[username] = new_password
        logging.info(f"Password updated for user: {username}")
        return "Password updated successfully"
    else:
        response.status = 401
        return "Unauthorized"

@route('/delete_account', method='POST')
def delete_account():
    username = request.forms.get('username')
    password = request.forms.get('password')

    if username in users and users[username] == password:
        del users[username]
        logging.info(f"Account deleted: {username}")
        return "Account deleted successfully"
    else:
        response.status = 401
        return "Unauthorized"

if __name__ == '__main__':
    run(host='localhost', port=8080)